https://github.com/rojoangel/codewars/blob/master/java/going-to-zero-or-to-infinity/src/Suite.java

import java.math.BigDecimal;

public class Suite {

    public static double going(int n) {
        BigDecimal fact = BigDecimal.ONE.setScale(6, BigDecimal.ROUND_UNNECESSARY);
        BigDecimal sum = BigDecimal.ZERO.setScale(6, BigDecimal.ROUND_UNNECESSARY);
        for (int i = 1; i <= n; i++) {
            fact = fact.multiply(BigDecimal.valueOf(i));
            sum = sum.add(fact);
        }

        BigDecimal bd = sum.divide(fact, BigDecimal.ROUND_FLOOR);
        return bd.doubleValue();
    }
}

========================================================================================================
public class Suite {
  
  public static double going(int n) {
      double result = 1.0;
      double frac = 1.0;
      while (n > 1) {
          frac /= n--;
          result += frac;
      }
      return (int) (result * 1e6) / 1e6;
  }
}

========================================================================================================
public class Suite {
  
  public static double going(int n) {
    if( n==1){
      return 1;
    }    
    return Math.floor(((going(n-1)/n)+1) * 1000000) / 1000000;
  }
}
========================================================================================================